{"version":3,"file":"static/js/324.a709766c.chunk.js","mappings":"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","sources":["AdvancedFilters.js","TagCloud.js","EntryViewer.js"],"sourcesContent":["import React from 'react';\nimport { Box, TextField, FormControlLabel, Checkbox } from '@mui/material';\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\nfunction AdvancedFilters({ startDate, setStartDate, endDate, setEndDate, hasSummary, setHasSummary, hasTranscript, setHasTranscript }) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <Box sx={{ display: 'flex', gap: 2, alignItems: 'center', mb: 2 }}>\n        <DatePicker\n          label=\"Start Date\"\n          value={startDate}\n          onChange={setStartDate}\n          renderInput={(params) => <TextField {...params} size=\"small\" />}\n        />\n        <DatePicker\n          label=\"End Date\"\n          value={endDate}\n          onChange={setEndDate}\n          renderInput={(params) => <TextField {...params} size=\"small\" />}\n        />\n        <FormControlLabel\n          control={<Checkbox checked={hasSummary} onChange={e => setHasSummary(e.target.checked)} />}\n          label=\"Has Summary\"\n        />\n        <FormControlLabel\n          control={<Checkbox checked={hasTranscript} onChange={e => setHasTranscript(e.target.checked)} />}\n          label=\"Has Transcript\"\n        />\n      </Box>\n    </LocalizationProvider>\n  );\n}\n\nexport default AdvancedFilters;\n","import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\n/**\n * TagCloud - D3.js word cloud visualization for tags.\n * Props:\n *   tags: array of { tag: string, count: number }\n *   onTagClick: function(tag)\n */\nfunction TagCloud({ tags, onTagClick }) {\n  const ref = useRef();\n\n  useEffect(() => {\n    if (!tags || tags.length === 0) return;\n    const width = 400, height = 200;\n    d3.select(ref.current).selectAll('*').remove();\n    const svg = d3.select(ref.current)\n      .attr('width', width)\n      .attr('height', height);\n    const maxCount = d3.max(tags, d => d.count) || 1;\n    const fontScale = d3.scaleLinear().domain([1, maxCount]).range([12, 38]);\n    // Simple grid layout (for clarity & reactivity)\n    const cols = Math.ceil(Math.sqrt(tags.length));\n    const rows = Math.ceil(tags.length / cols);\n    const cellW = width / cols;\n    const cellH = height / rows;\n    tags.sort((a, b) => b.count - a.count);\n    svg.selectAll('text')\n      .data(tags)\n      .enter()\n      .append('text')\n      .attr('x', (d, i) => (i % cols) * cellW + cellW/2)\n      .attr('y', (d, i) => Math.floor(i / cols) * cellH + cellH/2)\n      .attr('text-anchor', 'middle')\n      .attr('font-size', d => fontScale(d.count))\n      .attr('fill', '#1976d2')\n      .attr('style', 'cursor:pointer;')\n      .text(d => d.tag)\n      .on('click', (e, d) => onTagClick && onTagClick(d.tag));\n  }, [tags, onTagClick]);\n\n  return (\n    <svg ref={ref} style={{ width: '100%', height: 200, display: 'block', margin: 'auto' }} />\n  );\n}\n\nexport default TagCloud;\n","import React, { useEffect, useState, memo } from 'react';\nimport { Box, Typography, List, ListItem, ListItemText, Divider, Paper, Button, Chip, TextField, InputAdornment, Autocomplete } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { FixedSizeList } from 'react-window';\nimport AdvancedFilters from './AdvancedFilters';\nimport TagCloud from './TagCloud';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\n\n// --- Inline ErrorBoundary for diagnosis ---\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null };\n  }\n  static getDerivedStateFromError(error) {\n    return { error };\n  }\n  componentDidCatch(error, info) {\n    // eslint-disable-next-line no-console\n    console.error('EntryViewer render error:', error, info);\n  }\n  render() {\n    if (this.state.error) {\n      return <Box sx={{ p: 4 }}><Typography color=\"error\">Render error: {this.state.error.message || String(this.state.error)}</Typography></Box>;\n    }\n    return this.props.children;\n  }\n}\n\n/**\n * EntryViewer: Displays a list of all journal entries and their details.\n */\nfunction EntryViewer() {\n  const [entries, setEntries] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [search, setSearch] = useState('');\n  const [tagFilter, setTagFilter] = useState([]);\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [hasSummary, setHasSummary] = useState(false);\n  const [hasTranscript, setHasTranscript] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchEntries = async () => {\n      try {\n        const result = await window.electronAPI.listEntries();\n        console.log('DEBUG: listEntries result:', result);\n        if (!Array.isArray(result)) {\n          setError('Failed to load entries: Malformed or missing data.');\n          setEntries([]);\n          return;\n        }\n        setEntries(result);\n        setError(null);\n      } catch (err) {\n        setError('Could not load entries.');\n        setEntries([]);\n        console.error('IPC call to listEntries failed:', err);\n      }\n    };\n    fetchEntries();\n  }, []);\n\n  // Defensive: always arrays\n  const allTags = Array.from(new Set(entries.flatMap(e => (e.tags || []))));\n  const tagCounts = entries.flatMap(e => (e.tags || [])).reduce((acc, tag) => {\n    acc[tag] = (acc[tag] || 0) + 1;\n    return acc;\n  }, {});\n  const tagCloudData = Object.entries(tagCounts).map(([tag, count]) => ({ tag, count }));\n\n  const handleTagCloudClick = (tag) => {\n    if (!tagFilter.includes(tag)) setTagFilter([...tagFilter, tag]);\n  };\n\n  // Filter entries by search, tags, date, and toggles\n  const filteredEntries = entries.filter(entry => {\n    const matchesSearch =\n      !search ||\n      (entry.summary && entry.summary.toLowerCase().includes(search.toLowerCase())) ||\n      (entry.transcriptSnippet && entry.transcriptSnippet.toLowerCase().includes(search.toLowerCase())) ||\n      (entry.date && entry.date.includes(search));\n    const matchesTags =\n      tagFilter.length === 0 || (entry.tags && tagFilter.every(t => (entry.tags || []).includes(t)));\n    let matchesDate = true;\n    if (startDate && entry.date) {\n      matchesDate = new Date(entry.date) >= new Date(startDate);\n    }\n    if (endDate && entry.date) {\n      matchesDate = matchesDate && (new Date(entry.date) <= new Date(endDate));\n    }\n    const matchesSummary = !hasSummary || (entry.summary && entry.summary.trim() !== '');\n    const matchesTranscript = !hasTranscript || (entry.transcriptSnippet && entry.transcriptSnippet.trim() !== '');\n    return matchesSearch && matchesTags && matchesDate && matchesSummary && matchesTranscript;\n  });\n\n  const handleSelect = (entry) => setSelected(entry);\n\n  // Log props to TagCloud and AdvancedFilters for diagnosis\n  useEffect(() => {\n    console.log('DEBUG: TagCloudData', tagCloudData);\n    console.log('DEBUG: AdvancedFilters', { startDate, endDate, hasSummary, hasTranscript });\n  }, [tagCloudData, startDate, endDate, hasSummary, hasTranscript]);\n\n  // --- Row component for react-window ---\n  const Row = memo(({ index, style, data }) => {\n    const { entries, selected, handleSelect } = data;\n    const entry = entries[index];\n\n    if (!entry) return null; // Handle edge case where entry might be undefined\n\n    return (\n      <ListItem\n        style={style}\n        button\n        key={entry.base || index}\n        selected={selected && selected.base === entry.base}\n        onClick={() => handleSelect(entry)}\n        divider\n      >\n        <ListItemText\n          primary={entry.date || entry.base || `Entry ${index + 1}`}\n          secondary={\n            <>\n              <Typography component=\"span\" variant=\"body2\" color=\"text.secondary\" noWrap>\n                {(entry.summary && typeof entry.summary === 'string')\n                  ? entry.summary.slice(0, 100)\n                  : ((entry.transcriptSnippet && typeof entry.transcriptSnippet === 'string') ? entry.transcriptSnippet.slice(0, 100) : '')}\n              </Typography>\n              <br />\n              {(entry.tags || []).map(tag => <Chip key={tag} label={tag} size=\"small\" sx={{ mr: 0.5, mt: 0.5 }} />)}\n            </>\n          }\n        />\n      </ListItem>\n    );\n  });\n\n  return (\n    <ErrorBoundary>\n      <Box sx={{ mt: 4 }}>\n        <Typography variant=\"h4\" color=\"primary\" gutterBottom>Journal Entries</Typography>\n        {error && (\n          <Typography color=\"error\" sx={{ mb: 2 }}>{error}</Typography>\n        )}\n        <Box sx={{ display: 'flex', gap: 2, mb: 2 }}>\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            placeholder=\"Search entries...\"\n            value={search}\n            onChange={e => setSearch(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n            sx={{ flex: 1 }}\n          />\n          <Autocomplete\n            multiple\n            size=\"small\"\n            options={allTags}\n            value={tagFilter}\n            onChange={(_, v) => setTagFilter(v)}\n            renderInput={(params) => (\n              <TextField {...params} variant=\"outlined\" placeholder=\"Filter by tag\" />\n            )}\n            sx={{ minWidth: 200 }}\n          />\n          {/* Defensive: fallback rendering for AdvancedFilters */}\n          {AdvancedFilters ? (\n            <AdvancedFilters\n              startDate={startDate} setStartDate={setStartDate}\n              endDate={endDate} setEndDate={setEndDate}\n              hasSummary={hasSummary} setHasSummary={setHasSummary}\n              hasTranscript={hasTranscript} setHasTranscript={setHasTranscript}\n            />\n          ) : (\n            <Typography color=\"error\">AdvancedFilters missing</Typography>\n          )}\n        </Box>\n        <Box sx={{ mb: 2 }}>\n          <Typography variant=\"subtitle1\" color=\"secondary\">Tag Cloud</Typography>\n          {/* Defensive: fallback rendering for TagCloud */}\n          {TagCloud ? (\n            <TagCloud tags={tagCloudData} onTagClick={handleTagCloudClick} />\n          ) : (\n            <Typography color=\"error\">TagCloud missing</Typography>\n          )}\n        </Box>\n        <Paper elevation={2} sx={{ height: 400, width: '100%', overflow: 'hidden', mb: 2 }}>\n          {filteredEntries.length === 0 ? (\n            <ListItem><ListItemText primary=\"No entries found.\" /></ListItem>\n          ) : (\n            <FixedSizeList\n              height={400} // Match Paper height\n              itemCount={filteredEntries.length}\n              itemSize={90} // Estimate row height (adjust as needed)\n              width={'100%'}\n              itemData={{\n                entries: filteredEntries,\n                selected: selected,\n                handleSelect: handleSelect\n              }}\n            >\n              {Row}\n            </FixedSizeList>\n          )}\n        </Paper>\n        {selected && (\n          <Paper elevation={3} sx={{ p: 3 }}>\n            <Typography variant=\"h5\" color=\"secondary\" gutterBottom>{selected.date || selected.base || 'Entry'}</Typography>\n            {selected.audio && <audio controls src={`file://${selected.audio}`} style={{ width: '100%' }} />}\n            <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Summary:</Typography>\n            <Typography variant=\"body1\">{selected.summary || 'No summary available.'}</Typography>\n            <Typography variant=\"subtitle1\" sx={{ mt: 2 }}>Transcript:</Typography>\n            <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>{selected.transcriptSnippet || 'No transcript available.'}</Typography>\n            <Box sx={{ mt: 2 }}>\n              {(selected.tags || []).map(tag => <Chip key={tag} label={tag} size=\"small\" sx={{ mr: 0.5 }} />)}\n            </Box>\n          </Paper>\n        )}\n      </Box>\n    </ErrorBoundary>\n  );\n}\n\nexport default EntryViewer;\n"],"names":["_ref","startDate","setStartDate","endDate","setEndDate","hasSummary","setHasSummary","hasTranscript","setHasTranscript","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","_jsxs","Box","sx","display","gap","alignItems","mb","DatePicker","label","value","onChange","renderInput","params","TextField","size","FormControlLabel","control","Checkbox","checked","e","target","tags","onTagClick","ref","useRef","useEffect","length","d3","current","selectAll","remove","svg","attr","maxCount","d","count","fontScale","domain","range","cols","Math","ceil","sqrt","rows","cellW","cellH","sort","a","b","data","enter","append","i","floor","text","tag","on","style","width","height","margin","ErrorBoundary","React","constructor","props","super","this","state","error","getDerivedStateFromError","componentDidCatch","info","console","render","p","Typography","color","message","String","entries","setEntries","useState","selected","setSelected","search","setSearch","tagFilter","setTagFilter","setError","async","result","window","electronAPI","listEntries","log","Array","isArray","err","fetchEntries","allTags","from","Set","flatMap","tagCounts","reduce","acc","tagCloudData","Object","map","filteredEntries","filter","entry","matchesSearch","summary","toLowerCase","includes","transcriptSnippet","date","matchesTags","every","t","matchesDate","Date","matchesSummary","trim","matchesTranscript","Row","memo","_ref2","index","handleSelect","ListItem","button","base","onClick","divider","ListItemText","primary","secondary","_Fragment","component","variant","noWrap","slice","Chip","mr","mt","gutterBottom","placeholder","InputProps","startAdornment","InputAdornment","position","SearchIcon","flex","Autocomplete","multiple","options","_","v","minWidth","AdvancedFilters","TagCloud","Paper","elevation","overflow","FixedSizeList","itemCount","itemSize","itemData","audio","controls","src","whiteSpace"],"sourceRoot":""}
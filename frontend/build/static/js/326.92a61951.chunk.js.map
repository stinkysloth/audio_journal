{"version":3,"file":"static/js/326.92a61951.chunk.js","mappings":"2SAae,SAASA,EAAYC,GAA2B,IAA1B,QAAEC,EAAO,WAAEC,GAAYF,EAC1D,MAAOG,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,IAmB/C,OACEG,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEC,SAAU,IAAKC,GAAI,OAAQC,GAAI,GAAIC,SAAA,EAC5CC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,EAAAJ,SAAC,uBACtCC,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,QAAQC,cAAY,EAAAJ,SAAC,oHAGzCC,EAAAA,EAAAA,KAACI,EAAAA,EAAI,CAAAL,SACFb,EAAQmB,KAAI,CAACC,EAAQC,KACpBd,EAAAA,EAAAA,MAACe,EAAAA,GAAQ,CAAAT,SAAA,EACPC,EAAAA,EAAAA,KAACS,EAAAA,EAAY,CACXC,QAASJ,EAAOK,MAChBC,UAAW,aAAaN,EAAOO,sBAEjCb,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CACLC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNC,MAAOZ,EAAOO,SACdM,SAAUA,CAACC,EAAGC,IAvBGC,EAACf,EAAKW,KACjC,MAAMK,EAAUrC,EAAQmB,KAAI,CAACmB,EAAGC,IAAOA,IAAMlB,EAAM,IAAKiB,EAAGX,SAAUK,GAAUM,IAC/ErC,EAAWoC,EAAQ,EAqBaD,CAAqBf,EAAKc,GAChD1B,GAAI,CAAE+B,MAAO,IAAK7B,GAAI,MAExBG,EAAAA,EAAAA,KAAC2B,EAAAA,EAAuB,CAAA5B,UACtBC,EAAAA,EAAAA,KAAC4B,EAAAA,EAAU,CAACC,KAAK,MAAMC,QAASA,IA/BtBvB,KACpBpB,EAAWD,EAAQ6C,QAAO,CAACX,EAAGK,IAAMA,IAAMlB,IAAK,EA8BCyB,CAAazB,GAAKR,UACtDC,EAAAA,EAAAA,KAACiC,EAAAA,EAAU,UAfF1B,QAqBnBP,EAAAA,EAAAA,KAACkC,EAAAA,EAAO,CAACvC,GAAI,CAAEwC,GAAI,MACnB1C,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAI,CAAEyC,QAAS,OAAQC,IAAK,EAAGC,WAAY,UAAWvC,SAAA,EACzDC,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CACR5B,MAAM,eACNO,MAAO9B,EACP+B,SAAUqB,GAAKnD,EAAamD,EAAEC,OAAOvB,OACrCwB,KAAK,WAEP1C,EAAAA,EAAAA,KAACc,EAAAA,GAAM,CACLC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNC,MAAO3B,EACP4B,SAAUA,CAACC,EAAGC,IAAQ7B,EAAe6B,GACrC1B,GAAI,CAAE+B,MAAO,QAEf1B,EAAAA,EAAAA,KAAC2C,EAAAA,EAAM,CAACzC,QAAQ,YAAY4B,QA9DhBc,KACZxD,EAAUyD,SACZ1D,EAAW,IAAID,EAAS,CAAEyB,MAAOvB,EAAUyD,OAAQhC,SAAUtB,KAC7DF,EAAa,IACbG,EAAe,IACjB,EAyDoDsD,UAAW1D,EAAUyD,OAAO9C,SAAC,aAMrF,C","sources":["PromptConfig.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Typography, Button, TextField, IconButton, List, ListItem, ListItemText, ListItemSecondaryAction, Slider, Divider } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\n/**\n * PromptConfig component lets users configure prompt topics and display durations.\n */\nconst defaultPrompts = [\n  { label: 'Career', duration: 30 },\n  { label: 'Family', duration: 30 },\n  { label: 'Health', duration: 30 },\n];\n\nexport default function PromptConfig({ prompts, setPrompts }) {\n  const [newPrompt, setNewPrompt] = useState('');\n  const [newDuration, setNewDuration] = useState(30);\n\n  const handleAdd = () => {\n    if (newPrompt.trim()) {\n      setPrompts([...prompts, { label: newPrompt.trim(), duration: newDuration }]);\n      setNewPrompt('');\n      setNewDuration(30);\n    }\n  };\n\n  const handleDelete = (idx) => {\n    setPrompts(prompts.filter((_, i) => i !== idx));\n  };\n\n  const handleDurationChange = (idx, value) => {\n    const updated = prompts.map((p, i) => (i === idx ? { ...p, duration: value } : p));\n    setPrompts(updated);\n  };\n\n  return (\n    <Box sx={{ maxWidth: 500, mx: 'auto', mt: 4 }}>\n      <Typography variant=\"h5\" gutterBottom>Configure Prompts</Typography>\n      <Typography variant=\"body1\" gutterBottom>\n        Add topics (\"Career\", \"Family\", \"Health\", etc.) and set how long each is displayed during a recording session.\n      </Typography>\n      <List>\n        {prompts.map((prompt, idx) => (\n          <ListItem key={idx}>\n            <ListItemText\n              primary={prompt.label}\n              secondary={`Duration: ${prompt.duration} seconds`}\n            />\n            <Slider\n              min={5}\n              max={120}\n              step={5}\n              value={prompt.duration}\n              onChange={(_, val) => handleDurationChange(idx, val)}\n              sx={{ width: 120, mx: 2 }}\n            />\n            <ListItemSecondaryAction>\n              <IconButton edge=\"end\" onClick={() => handleDelete(idx)}>\n                <DeleteIcon />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      </List>\n      <Divider sx={{ my: 2 }} />\n      <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\n        <TextField\n          label=\"Prompt topic\"\n          value={newPrompt}\n          onChange={e => setNewPrompt(e.target.value)}\n          size=\"small\"\n        />\n        <Slider\n          min={5}\n          max={120}\n          step={5}\n          value={newDuration}\n          onChange={(_, val) => setNewDuration(val)}\n          sx={{ width: 120 }}\n        />\n        <Button variant=\"contained\" onClick={handleAdd} disabled={!newPrompt.trim()}>\n          Add\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n"],"names":["PromptConfig","_ref","prompts","setPrompts","newPrompt","setNewPrompt","useState","newDuration","setNewDuration","_jsxs","Box","sx","maxWidth","mx","mt","children","_jsx","Typography","variant","gutterBottom","List","map","prompt","idx","ListItem","ListItemText","primary","label","secondary","duration","Slider","min","max","step","value","onChange","_","val","handleDurationChange","updated","p","i","width","ListItemSecondaryAction","IconButton","edge","onClick","filter","handleDelete","DeleteIcon","Divider","my","display","gap","alignItems","TextField","e","target","size","Button","handleAdd","trim","disabled"],"sourceRoot":""}
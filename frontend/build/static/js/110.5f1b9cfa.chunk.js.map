{"version":3,"file":"static/js/110.5f1b9cfa.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/DialogTitle/DialogTitle.js","FileImporter.js"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n  const {\n      className,\n      id: idProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: idProp != null ? idProp : titleId\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import React, { useState } from 'react';\nimport { Box, Typography, Button, TextField, CircularProgress, Stack, Dialog, DialogTitle, DialogContent, DialogActions } from '@mui/material';\n\n/**\n * FileImporter allows the user to select a file from disk and run it through the AI pipeline.\n * - Supports searching (browsing) for files on disk.\n * - Shows parsing/progress status.\n */\nfunction extractDateFromFilename(filename) {\n  // Look for YYYY-MM-DD or YYYYMMDD or similar\n  const re = /(20\\d{2}[\\-_]?(0[1-9]|1[0-2])[\\-_]?(0[1-9]|[12][0-9]|3[01]))/;\n  const match = filename.match(re);\n  if (match) {\n    let dateStr = match[1].replace(/[-_]/g, '');\n    return dateStr.length === 8\n      ? `${dateStr.slice(0,4)}-${dateStr.slice(4,6)}-${dateStr.slice(6,8)}`\n      : match[1];\n  }\n  return null;\n}\n\nfunction FileImporter() {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [status, setStatus] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [proposedName, setProposedName] = useState('');\n  const [showNameDialog, setShowNameDialog] = useState(false);\n\n  const handleFileChange = async (e) => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setSelectedFile(file);\n      setResult(null);\n      setStatus('');\n      // Propose name\n      let baseName = file.name.replace(/\\.[^/.]+$/, \"\");\n      let date = extractDateFromFilename(baseName);\n      if (!date) {\n        // Use file's lastModified date\n        const d = new Date(file.lastModified);\n        date = d.toISOString().slice(0,10);\n      }\n      let nameSuggestion = `${date} Imported Entry`;\n      setProposedName(nameSuggestion);\n      setShowNameDialog(true);\n    }\n  };\n\n  const handleAcceptName = () => {\n    setShowNameDialog(false);\n  };\n\n  const handleNameChange = (e) => {\n    setProposedName(e.target.value);\n  };\n\n  const handleProcess = async () => {\n    if (!selectedFile) return;\n    setLoading(true);\n    setStatus('Processing file...');\n    setResult(null);\n    try {\n      const res = await window.electronAPI.processImportedFile(selectedFile, proposedName);\n      setResult(res.result || res.summary || JSON.stringify(res));\n      setStatus(res.success ? 'File processed.' : 'Processing failed.');\n    } catch (err) {\n      setStatus('Error processing file.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Box sx={{ mt: 8, textAlign: 'center' }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Import and Analyze a File\n      </Typography>\n      <Stack direction=\"row\" spacing={2} justifyContent=\"center\" sx={{ mb: 2 }}>\n        <Button variant=\"contained\" component=\"label\">\n          Choose File\n          <input type=\"file\" hidden onChange={handleFileChange} />\n        </Button>\n        <TextField\n          value={selectedFile ? selectedFile.name : ''}\n          label=\"Selected File\"\n          variant=\"outlined\"\n          size=\"small\"\n          InputProps={{ readOnly: true }}\n          sx={{ minWidth: 200 }}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleProcess}\n          disabled={!selectedFile || loading || showNameDialog}\n        >\n          Run AI\n        </Button>\n      </Stack>\n      {loading && <CircularProgress sx={{ mt: 2 }} />}\n      {status && <Typography sx={{ mt: 2 }}>{status}</Typography>}\n      {result && (\n        <Box sx={{ mt: 4, textAlign: 'left' }}>\n          <Typography variant=\"subtitle1\">Result:</Typography>\n          <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-wrap' }}>{result}</Typography>\n        </Box>\n      )}\n      <Dialog open={showNameDialog} onClose={handleAcceptName}>\n        <DialogTitle>Confirm Entry Name</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Entry Name\"\n            type=\"text\"\n            fullWidth\n            value={proposedName}\n            onChange={handleNameChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleAcceptName} variant=\"contained\">Accept</Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n\nexport default FileImporter;\n"],"names":["_excluded","DialogTitleRoot","styled","Typography","name","slot","overridesResolver","props","styles","root","padding","flex","React","inProps","ref","useDefaultProps","className","id","idProp","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","getDialogTitleUtilityClass","useUtilityClasses","titleId","DialogContext","_jsx","_extends","component","clsx","variant","selectedFile","setSelectedFile","useState","status","setStatus","result","setResult","loading","setLoading","proposedName","setProposedName","showNameDialog","setShowNameDialog","handleAcceptName","_jsxs","Box","sx","mt","textAlign","children","gutterBottom","Stack","direction","spacing","justifyContent","mb","Button","type","hidden","onChange","async","e","target","files","file","date","filename","match","dateStr","replace","length","slice","extractDateFromFilename","Date","lastModified","toISOString","TextField","value","label","size","InputProps","readOnly","minWidth","color","onClick","res","window","electronAPI","processImportedFile","summary","JSON","stringify","success","err","disabled","CircularProgress","whiteSpace","Dialog","open","onClose","DialogTitle","DialogContent","autoFocus","margin","fullWidth","DialogActions"],"sourceRoot":""}